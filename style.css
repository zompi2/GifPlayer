/**
 * GifPlayer Example.
 *
 * With CSS file we can define the alignment, visibility and
 * appearance of the player.
 *
 * (c) 2015 Damian Nowakowski
 */

/* Class used to hide images */
.hidden {
	display: none!important;
}

/* With this class we can centre the gif player */
.gifcenter {
	width: 960px;
	margin: auto;
	text-align: center;
}

/* With relative position the images will overlay themselves 
 * and there will be no problem if more than one gif player is  
 * displayed on the page */
.gifcont {
	position: relative;
	display: inline-block;
	background-color: #CCC;
}


/* =============================== */
/* ======= The Play Button ======= */
/* =============================== */

/* The round button with white background and black
 * border. It is positioned in the centre of the gif player
 * and has fixed size. The border transits to the lesser alpha
 * when hover. */
.play {
    border: 4px solid black;
	border-radius: 100%;
	
	position: absolute;
	top: 50%;
	left: 50%;
    width: 40px;
    height: 40px;
	margin-top: -22px;
	margin-left: -22px;
	
    transition: all 0.5s ease;
	
    cursor: pointer;
	background-color: white;
}

/* The "arrow" with fixed size on the centre of 
 * the round button. It transits to the lesser alpha
 * when hover. */
.play_button {
    position:relative;
    top: 10px;
    left: 40%;
    width: 0;
    height: 0;
    border-top: 10px solid transparent;
    border-bottom: 10px solid transparent;
    border-left: 10px solid black;
} 

/* Setting lesser alpha on play round button when hover */
.play.hover {
    border-color: rgba(0,0,0,0.5);
}

/* Setting lesser alpha on black triangle button when hover */
.play.hover .play_button{
    border-left: 10px solid rgba(0,0,0,0.5);
}


/* =============================== */
/* ========= The Spinner ========= */
/* =============================== */

/* Handles the fancy spinner animation with fixed size
 * and centred on the gifplayer */
.spinner { 
	position: absolute;
	top: 50%;
	left: 50%;
	margin-top: -20px;
	margin-left: -20px;
	width: 40px;
	height: 40px;
}

/* Spinner is made from two bounding spheres. Here are
 * set two of those spheres and the animation is pinned to it. */
.double-bounce1, .double-bounce2 {
  width: 100%;
  height: 100%;
  border-radius: 50%;
  background-color: #FFF;
  opacity: 0.6;
  position: absolute;
  top: 0;
  left: 0;
  
  -webkit-animation: bounce 2.0s infinite ease-in-out;
  animation: bounce 2.0s infinite ease-in-out;
}

/* The second bouncing sphere is delayed so the animation
 * will look nicer */
.double-bounce2 {
  -webkit-animation-delay: -1.0s;
  animation-delay: -1.0s;
}

/* Setting bouncing animation key-frames that will 
 * scale bouncing spheres.
 * Because it is not a standard for webkit there are
 * two key-frames definitions. */
@-webkit-keyframes bounce {
  0%, 100% { -webkit-transform: scale(0.0) }
  50% { -webkit-transform: scale(1.0) }
}
@keyframes bounce {
  0%, 100% { 
    transform: scale(0.0);
    -webkit-transform: scale(0.0);
  } 50% { 
    transform: scale(1.0);
    -webkit-transform: scale(1.0);
  }
}

